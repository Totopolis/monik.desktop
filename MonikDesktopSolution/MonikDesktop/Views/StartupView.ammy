using MonikDesktop.Views;
using MonikDesktop.ViewModels;
using MonikDesktop.Common.Interfaces;
using MahApps.Metro.Controls;
using MahApps.Metro.IconPacks;

alias ComboBoxWithRemove(removeCommand, itemsSource, selectedValue, updateValue)
{
  ComboBox
  {
    IsEditable: true
    ItemTemplate: DataTemplate
    {
      StackPanel
      {
        Orientation: Horizontal
        Button
        {
          "Remove"
          Command: bind $removeCommand from $resource Proxy
          CommandParameter: bind
        }
        TextBlock
        {
          Margin: "10,0,0,0"
          VerticalAlignment: Center
          Text: bind
        }
      }
    }
    ItemsSource: bind $itemsSource
    SelectedValue: bind $selectedValue
    Text: bind $updateValue
          set
          [
            UpdateSourceTrigger: LostFocus
            Mode: OneWayToSource
            ValidatesOnExceptions: true
          ]
  }
}

ViewUserControl "MonikDesktop.Views.StartupView"
{
  Resources: [
    BindingProxy Key="Proxy" { Data: bind }
  ]
  Grid
  {
    StackPanel
    {
      Orientation: Vertical
      Margin: "3"

      Grid { 
        #ThreeColumns("120", "80", "*")
        #TwoRows()
        ToggleSwitch {
          #Cell(0,0,2)
          HorizontalContentAlignment: Center
          OnLabel: "Dark"
          OffLabel: "Light"
          IsChecked: bind IsDark
        }
        TextBlock {
          #Cell(0,1)
          Margin: "20,0,0,0"
          VerticalAlignment: Center
          "Color"
        }
        ComboBox {
          #Cell(0,2)
          Margin: "0,5,0,5"
          ItemsSource: bind Accents
          SelectedValue: bind Accent
        }
        TextBlock {
          #Cell(1,1)
          Margin: "20,0,0,0"
          VerticalAlignment: Center
          "Header"
        }
        TextBox {
          #Cell(1,2)
          Margin: "0,5,0,5"
          VerticalAlignment: Center
          Text: bind AppTitle
        }
      }

      Separator { Margin: 10 }

      Label { "Server Url" }
      Grid 
      {
        #TwoColumns("Auto", "*")
        Button 
        {
          Grid.Column: 0
          Margin: "5,0,5,0"
          Width: 26
          Height: 26
          ToolTip: "Reload cache"
          Style: resource dyn "MahApps.Metro.Styles.MetroCircleButtonStyle"
          Command: bind RefreshCommand
          PackIconModern 
          {
            Kind: "Refresh"
            Height: 12
            Width: 12
          }
        }
        @ComboBoxWithRemove("Data.RemoveUrlCommand", "ServerUrls", "ServerUrl", "UpdateServerUrl") 
        {
          Grid.Column: 1
        }
      }
      

      Label { "Actions" }
      Button
      {
        Margin: "0 0 0 5"
        Command: bind NewLogCommand
        "Create Logs"
      }
      Button
      {
        Margin: "0 0 0 5"
        Command: bind NewKeepAliveCommand
        "Create KeepAlive"
      }
      Button
      {
        Margin: "0 0 0 5"
        Command: bind NewMetricsCommand
        "Create Metrics"
      }

      Separator { Margin: 10 }

      Label { "Authorization token" }
      @ComboBoxWithRemove("Data.RemoveAuthTokenCommand", "AuthTokens", "AuthToken", "UpdateAuthToken") {}
      TextBlock 
      {
        Margin: 3
        Foreground: resource dyn "GrayBrush4"
        Visibility: bind AuthTokenDescription convert (string val) => string.IsNullOrEmpty(val) ? Visibility.Collapsed : Visibility.Visible
        Text: bind AuthTokenDescription
      }

      Label { "Management" }
      Button
      {
        Margin: "0 0 0 5"
        Command: bind RemoveEntitiesCommand
        "Remove entities"
      }
      Button
      {
        Margin: "0 0 0 5"
        Command: bind ManageGroupsCommand
        "Manage groups"
      }
    }
    Grid
    {
      Background: resource dyn "WhiteBrush"
      Opacity: 0.75
      Visibility: bind IsBusy
                  convert (bool isBusy) => isBusy ? Visibility.Visible : Visibility.Collapsed
      PackIconModern
      {
        Kind: "Refresh"
        Spin: true
        Height: 48
        Width: 48
        SpinDuration: 1
        HorizontalAlignment: Center
        VerticalAlignment: Center
      }
    }
  }
}
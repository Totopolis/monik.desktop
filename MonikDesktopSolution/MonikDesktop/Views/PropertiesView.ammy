using MahApps.Metro.Controls;

UserControl "MonikDesktop.Views.PropertiesView"
{
  Grid
  {
    StackPanel
    {
      Orientation: "Vertical"
      Margin: "3"
      TextBlock 
      {
        Margin: 5
        Text: bind "Model.Cache.Service.ServerUrl"
      }
      Separator {  }
      Button
      {
        Command: bind ShowWindow.StartCommand
        Margin: "5"
        "Start"
      }
      Button
      {
        Command: bind ShowWindow.StopCommand
        Margin: "5"
        "Stop"
      }
      Label { "Caption" }
      TextBox
      {
        Text: bind Model.Caption
        Height: "20"
      }
      Label { "Refresh period (sec.)" }
      NumericUpDown
      {
        Value: bind Model.RefreshSec
      }
      StackPanel
      {
        Orientation: "Vertical"
        Margin: "0"
        Visibility: bind LogsVisibility
        Label { "Level filter" }
        ComboBox
        {
          ItemsSource: bind LevelTypes
          SelectedValue: bind Model.Level
                         set [ Mode: TwoWay ]
        }
        Label { "Severity Cutoff" }
        ComboBox
        {
          ItemsSource: bind SeverityCutoffTypes
          SelectedValue: bind Model.SeverityCutoff
                         set [ Mode: TwoWay ]
        }
        Label { "Top" }
        ComboBox
        {
          ItemsSource: bind TopTypes
          SelectedValue: bind Model.Top
                         set [ Mode: TwoWay ]
        }
        @StackPanelHorizontal()
        {
          Margin: "5,10,0,0"
          CheckBox
          {
            IsChecked: bind Model.Colorized
          }
          Label { "Colorized" }
        }
        @StackPanelHorizontal()
        {
          Margin: "5,0,0,10"
          CheckBox
          {
            IsChecked: bind Model.GroupDuplicatingItems
                       set [ Mode: TwoWay ]
          }
          Label { "GroupDoublingLogs" }
        }
      }
      Label { "Datetime format" }
      ComboBox
      {
        ItemsSource: bind DatetimeFormats
        SelectedValue: bind Model.DateTimeFormat
      }
      StackPanel
      {
        Orientation: Vertical
        Margin: "0"
        Style: Style {
          TargetType: StackPanel
          Triggers: [
            @CollapsedIf_DataTrigger(bind LogsVisibility, false)
            @CollapsedIf_DataTrigger(bind Model.GroupDuplicatingItems, false)
          ]
        }
        Label { "Duplicated Datetime format" }
        ComboBox
        {
          ItemsSource: bind DatetimeFormats
          SelectedValue: bind Model.DuplicatedDateTimeFormat
        }
      }
      StackPanel
      {
        Orientation: "Vertical"
        Margin: "0"
        Visibility: bind KeepAlivesVisibility
        Label { "Keep Alive Warning period (sec.)" }
        NumericUpDown
        {
          Value: bind Model.KeepAliveWarningPeriod
        }
      }
      StackPanel
      {
        Orientation: "Vertical"
        Margin: "0"
        Visibility: bind MetricsVisibility
        Label { "Metrics Mode" }
        ComboBox
        {
          ItemsSource: bind MetricTerminalModes
          SelectedValue: bind Model.MetricTerminalMode
                         set [ Mode: TwoWay ]
        }
        StackPanel
        {
          Orientation: "Vertical"
          Margin: "0"
          Visibility: bind Model.MetricDiagramVisible
                      convert (bool val) => val ? Visibility.Visible : Visibility.Collapsed
          Label { "History depth (in hours)" }
          NumericUpDown
          {
            Value: bind Model.MetricHistoryDepthHours
            Minimum: 1
            Maximum: 333
          }
          Label { "History skip 5 min intervals" }
          NumericUpDown
          {
            Value: bind Model.MetricHistorySkip5Min
          }
        }
      }
    }
  }
}
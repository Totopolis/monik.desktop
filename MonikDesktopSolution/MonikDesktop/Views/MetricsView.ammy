using MonikDesktop.ViewModels;
using MonikDesktop.Common.ModelsApp;
using LiveCharts.Wpf;

UserControl "MonikDesktop.Views.MetricsView" {
  Resources: [
    BindingProxy Key="Proxy" { Data: bind }
  ]
  Grid {
    #TwoColumns("Auto", "*")
    @SimpleDataGrid(20) "MainGrid" {
      Grid.Column: 0
      SelectedItem: bind SelectedMetric
      ItemsSource: bind MetricValuesList
      Columns: [
        DataGridTextColumn {
          Header: "Source"
          Binding: bind "Metric.Instance.Source.Name"
          Width: Auto
        }
        DataGridTextColumn {
          Header: "Instance"
          Binding: bind "Metric.Instance.Name"
          Width: Auto
        }
        DataGridTextColumn {
          Header: "Name"
          Binding: bind Metric.Name
          Width: Auto
        }
        DataGridTextColumn {
          Header: "Type"
          Binding: bind Metric.Aggregation
          Width: Auto
        }
        DataGridTextColumn {
          Header: "Value"
          Binding: bind Value
          Width: Auto
          Visibility: bind "Data.Model.MetricDiagramVisible" from $resource Proxy
                      convert (bool val) => val ? Visibility.Collapsed : Visibility.Visible
          ElementStyle: Style {
            TargetType: TextBlock
            #Setter("HorizontalAlignment", "Right")
            #Setter("VerticalAlignment", "Center")
            #Visibility_OnBinding(bind HasValue, true)
          }
        }
      ]
    }
    CartesianChart {
      Grid.Column: 1
      LegendLocation: None
      DataTooltip: MonikDesktop.Views.MetricsChartTooltipView {}
      DisableAnimations: true
      Hoverable: false
      Visibility: bind Model.MetricDiagramVisible
                  convert (bool val) => val ? Visibility.Visible : Visibility.Collapsed

      Series: ColumnSeries
      {
        MaxColumnWidth: double.PositiveInfinity
        ColumnPadding: bind Model.MetricHistoryDepthHours
                       convert (int v) => v > 5 ? 0 : (v > 2 ? 1 : 2)
        Values: bind SeriesCollection
        Fill: resource dyn "AccentBaseColorBrush"
      }
      AxisX: Axis { LabelFormatter: bind DateTimeFormatter }
    }
  }
}
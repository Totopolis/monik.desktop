using MonikDesktop.Views;
using MonikDesktop.ViewModels;
using MonikDesktop.Common.Converters;

ViewUserControl "MonikDesktop.Views.LogsView" {
  Resources: [
    BindingProxy Key="Proxy" { Data: bind }
    SeverityToNameConverter Key="SeverityToName" { }
    LevelToNameConverter Key="LevelToName" { }
  ]
  Grid {
    @SimpleDataGrid(20) "MainGrid" {
      SelectedItem: "{Binding Model.SelectedItem}"
      ItemsSource: "{Binding LogsList}"
      RowStyle: Style {
        BasedOn: resource "MetroDataGridRow"
        TargetType: DataGridRow
        combine Triggers: [
          MultiDataTrigger {
            Conditions: [
              Condition {
                Binding: bind Severity
                Value: 10
              }
              Condition {
                Binding: bind "Data.Model.Colorized" from $resource Proxy
                Value: true
              }
            ]
            Setter { Property: "Foreground",  Value: "White" }
            Setter { Property: "Background",  Value: "#FFFF5959" }
          }
          MultiDataTrigger {
            Conditions: [
              Condition {
                Binding: bind Severity
                Value: 20
              }
              Condition {
                Binding: bind "Data.Model.Colorized" from $resource Proxy
                Value: true
              }
            ]
            Setter { Property: "Foreground",  Value: "Black" } 
            Setter { Property: "Background",  Value: "#FFFFFF64" }
          }
          DataTrigger {
            Binding: bind IsSelected from $this
            Value: true
            #Setter("Background", resource dyn "MetroDataGrid.HighlightBrush")
            #Setter("BorderBrush", resource dyn "MetroDataGrid.HighlightBrush")
            #Setter("Foreground", resource dyn "MetroDataGrid.HighlightTextBrush")
          }
          DataTrigger {
            Binding: bind IsMouseOver from $this
            Value: true
            #Setter("Background", resource dyn "MetroDataGrid.MouseOverHighlightBrush")
            #Setter("BorderBrush", resource dyn "MetroDataGrid.MouseOverHighlightBrush")
          }
        ]
      }
      Columns: [
        DataGridTextColumn {
          Header: "ID"
          Binding: "{Binding ID}"
          Width: "Auto"
        }
        DataGridTextColumn {
          Header: "Created"
          Binding: "{Binding CreatedStr}"
          Width: "Auto"
        }
        DataGridTextColumn {
          Header: "Source"
          Binding: "{Binding Instance.Source.Name}"
          Width: "Auto"
        }
        DataGridTextColumn {
          Header: "Instance"
          Binding: "{Binding Instance.Name}"
          Width: "Auto"
        }
        DataGridTextColumn {
          Header: "Level"
          Binding: "{Binding Path=Level, Converter={StaticResource LevelToName}}"
          Width: "Auto"
        }
        DataGridTextColumn {
          Header: "Severity"
          Binding: "{Binding Path=Severity, Converter={StaticResource SeverityToName}}"
          Width: "Auto"
        }
        DataGridTextColumn {
          Header: "Message"
          Binding: "{Binding Body}"
          Width: "*"
        }
      ]
    }
  }
}
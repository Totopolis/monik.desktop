<ns0:ViewUserControl x:Class="MonikDesktop.Views.ManageGroupsView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ns0="clr-namespace:MonikDesktop.Views" xmlns:ns1="clr-namespace:AmmySidekick;assembly=AmmySidekick"
                     xmlns:ammySidekick="clr-namespace:AmmySidekick">
  <ns0:ViewUserControl.Resources>
    <ns0:BindingProxy x:Key="Proxy">
      <ns0:BindingProxy.Data>
        <Binding/>
      </ns0:BindingProxy.Data>
    </ns0:BindingProxy>
  </ns0:ViewUserControl.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="50"/>
      <RowDefinition/>
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*"/>
      <ColumnDefinition Width="20"/>
      <ColumnDefinition Width="*"/>
      <ColumnDefinition Width="20"/>
      <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>
    <Grid Grid.Row="0" Grid.Column="0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Border BorderBrush="{DynamicResource AccentBaseColorBrush}" BorderThickness="0,0,0,4" Grid.Column="1">
        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" Text="Groups"/>
      </Border>
      <Button Grid.Column="2">
        <Button.Style>
          <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                  <Border x:Name="button" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="7,0,7,5" Background="Green" CornerRadius="10" Width="30" Height="30">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontSize="20" FontWeight="Bold" Text="{TemplateBinding Button.Content}"/>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                      <Setter Property="Background" Value="SeaGreen" TargetName="button"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                      <Setter Property="Background" Value="DarkGreen" TargetName="button"/>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Button.Style>
        <Button.Command>
          <Binding Path="CreateGroupCommand"/>
        </Button.Command>+
      </Button>
    </Grid>
    <Grid Grid.Row="0" Grid.Column="2">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Border BorderBrush="{DynamicResource AccentBaseColorBrush}" BorderThickness="0,0,0,4" Grid.Column="1">
        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" Text="In Group"/>
      </Border>
    </Grid>
    <Grid Grid.Row="0" Grid.Column="4">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Border Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="7,3,7,5" Background="Orange" CornerRadius="10" MinWidth="40">
        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontSize="20">
          <TextBlock.Text>
            <Binding Path="ListWithoutGroup.Count"/>
          </TextBlock.Text>
        </TextBlock>
        <Border.Style>
          <Style TargetType="{x:Type Border}">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
              <DataTrigger Value="0">
                <Setter Property="Visibility" Value="Collapsed"/>
                <DataTrigger.Binding>
                  <Binding Path="ListWithoutGroup.Count"/>
                </DataTrigger.Binding>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Border.Style>
      </Border>
      <Border BorderBrush="{DynamicResource AccentBaseColorBrush}" BorderThickness="0,0,0,4" Grid.Column="1">
        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" Text="Without Group"/>
      </Border>
    </Grid>
    <DataGrid IsReadOnly="True" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" RowHeight="40" HorizontalGridLinesBrush="{DynamicResource SeperatorBrush}" VerticalGridLinesBrush="{DynamicResource SeperatorBrush}" GridLinesVisibility="Horizontal" SelectionMode="Single" Grid.Row="1" Grid.Column="0">
      <DataGrid.ItemsSource>
        <Binding Path="ListGroups"/>
      </DataGrid.ItemsSource>
      <DataGrid.SelectedItem>
        <Binding Path="SelectedGroup" Mode="TwoWay"/>
      </DataGrid.SelectedItem>
      <DataGrid.Columns>
        <DataGridTemplateColumn>
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Button Margin="10">
                <Button.Command>
                  <Binding Path="Data.RemoveGroupCommand" Source="{StaticResource Proxy}"/>
                </Button.Command>
                <Button.CommandParameter>
                  <Binding/>
                </Button.CommandParameter>X
                <Button.Style>
                  <Style TargetType="{x:Type Button}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Setter Property="Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                          <Border x:Name="button" Padding="5,0,5,1" CornerRadius="5" Background="Red" BorderBrush="Black" BorderThickness="1">
                            <TextBlock Foreground="White" FontWeight="Bold" Text="{TemplateBinding Button.Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                          </Border>
                          <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                              <Setter Property="Background" Value="Brown" TargetName="button"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                              <Setter Property="Background" Value="DarkRed" TargetName="button"/>
                            </Trigger>
                          </ControlTemplate.Triggers>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="Opacity" Value="0"/>
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DataGridRow}},Path=IsMouseOver}" Value="True">
                        <DataTrigger.EnterActions>
                          <BeginStoryboard>
                            <Storyboard>
                              <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5"/>
                            </Storyboard>
                          </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                          <BeginStoryboard>
                            <Storyboard>
                              <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5"/>
                            </Storyboard>
                          </BeginStoryboard>
                        </DataTrigger.ExitActions>
                        <Setter Property="Opacity" Value="1"/>
                      </DataTrigger>
                      <Trigger Property="Opacity" Value="0">
                        <Setter Property="Visibility" Value="Hidden"/>
                      </Trigger>
                    </Style.Triggers>
                  </Style>
                </Button.Style>
              </Button>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTextColumn Header="ID" Width="Auto">
          <DataGridTextColumn.Binding>
            <Binding Path="ID"/>
          </DataGridTextColumn.Binding>
        </DataGridTextColumn>
        <DataGridTextColumn Header="Group" Width="Auto">
          <DataGridTextColumn.Binding>
            <Binding Path="Name"/>
          </DataGridTextColumn.Binding>
        </DataGridTextColumn>
        <DataGridTextColumn Header="Default" Width="Auto">
          <DataGridTextColumn.Binding>
            <Binding Path="IsDefault" Converter="{x:Static ammySidekick:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;2&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;ternary&gt;&lt;parameter name=&quot;val&quot; type=&quot;System.Boolean&quot; /&gt;&lt;prim val=&quot;Default&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.String&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;prim val=&quot;&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.String&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/ternary&gt;&lt;parameter name=&quot;val&quot; type=&quot;System.Boolean&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
          </DataGridTextColumn.Binding>
        </DataGridTextColumn>
        <DataGridTextColumn Header="Amount" Width="*">
          <DataGridTextColumn.ElementStyle>
            <Style TargetType="{x:Type TextBlock}">
              <Setter Property="HorizontalAlignment" Value="Right"/>
              <Setter Property="Margin" Value="10"/>
            </Style>
          </DataGridTextColumn.ElementStyle>
          <DataGridTextColumn.Binding>
            <Binding Path="Instances.Count"/>
          </DataGridTextColumn.Binding>
        </DataGridTextColumn>
      </DataGrid.Columns>
    </DataGrid>
    <DataGrid IsReadOnly="True" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" RowHeight="40" HorizontalGridLinesBrush="{DynamicResource SeperatorBrush}" VerticalGridLinesBrush="{DynamicResource SeperatorBrush}" GridLinesVisibility="Horizontal" SelectionMode="Single" PreviewMouseLeftButtonDown="GridMouseLeftButtonDown" PreviewMouseMove="GridMouseMove" Drop="GridDrop" DragEnter="GridDragEnter" DragOver="GridDragOver" AllowDrop="True" Tag="InGroup" Grid.Row="1" Grid.Column="2">
      <DataGrid.Columns>
        <DataGridTextColumn Header="ID" Width="Auto">
          <DataGridTextColumn.Binding>
            <Binding Path="ID"/>
          </DataGridTextColumn.Binding>
        </DataGridTextColumn>
        <DataGridTextColumn Header="Source" Width="Auto">
          <DataGridTextColumn.Binding>
            <Binding Path="Source.Name"/>
          </DataGridTextColumn.Binding>
        </DataGridTextColumn>
        <DataGridTextColumn Header="Instance" Width="Auto">
          <DataGridTextColumn.Binding>
            <Binding Path="Name"/>
          </DataGridTextColumn.Binding>
        </DataGridTextColumn>
      </DataGrid.Columns>
      <DataGrid.ItemsSource>
        <Binding Path="ListInGroup"/>
      </DataGrid.ItemsSource>
    </DataGrid>
    <DataGrid IsReadOnly="True" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" RowHeight="40" HorizontalGridLinesBrush="{DynamicResource SeperatorBrush}" VerticalGridLinesBrush="{DynamicResource SeperatorBrush}" GridLinesVisibility="Horizontal" SelectionMode="Single" PreviewMouseLeftButtonDown="GridMouseLeftButtonDown" PreviewMouseMove="GridMouseMove" Drop="GridDrop" DragEnter="GridDragEnter" DragOver="GridDragOver" AllowDrop="True" Tag="WithoutGroup" Grid.Row="1" Grid.Column="4">
      <DataGrid.Columns>
        <DataGridTextColumn Header="ID" Width="Auto">
          <DataGridTextColumn.Binding>
            <Binding Path="ID"/>
          </DataGridTextColumn.Binding>
        </DataGridTextColumn>
        <DataGridTextColumn Header="Source" Width="Auto">
          <DataGridTextColumn.Binding>
            <Binding Path="Source.Name"/>
          </DataGridTextColumn.Binding>
        </DataGridTextColumn>
        <DataGridTextColumn Header="Instance" Width="Auto">
          <DataGridTextColumn.Binding>
            <Binding Path="Name"/>
          </DataGridTextColumn.Binding>
        </DataGridTextColumn>
      </DataGrid.Columns>
      <DataGrid.ItemsSource>
        <Binding Path="ListWithoutGroup"/>
      </DataGrid.ItemsSource>
    </DataGrid>
  </Grid>
</ns0:ViewUserControl>
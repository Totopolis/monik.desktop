<UserControl x:Class="MonikDesktop.Views.StartupView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ns0="clr-namespace:MonikDesktop.Views" xmlns:ns1="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" xmlns:ns2="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF" xmlns:ns3="clr-namespace:AmmySidekick;assembly=AmmySidekick" Background="{DynamicResource WhiteBrush}" ns3:Ammy.Register="/MonikDesktop;component/Views/StartupView.g.xaml">
  <UserControl.Resources>
    <ns0:BindingProxy x:Key="Proxy">
      <ns0:BindingProxy.Data>
        <Binding/>
      </ns0:BindingProxy.Data>
    </ns0:BindingProxy>
  </UserControl.Resources>
  <Grid>
    <StackPanel Orientation="Vertical" Margin="3">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="130"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <ns1:ToggleSwitch Grid.Column="0" HorizontalContentAlignment="Center" OnLabel="Dark" OffLabel="Light">
          <ns1:ToggleSwitch.CheckChangedCommand>
            <Binding Path="ThemeModeChangedCommand"/>
          </ns1:ToggleSwitch.CheckChangedCommand>
          <ns1:ToggleSwitch.CheckChangedCommandParameter>
            <Binding Path="IsChecked" RelativeSource="{x:Static RelativeSource.Self}"/>
          </ns1:ToggleSwitch.CheckChangedCommandParameter>
        </ns1:ToggleSwitch>
        <TextBlock Grid.Column="1" Margin="20,0,10,0" VerticalAlignment="Center">Header</TextBlock>
        <TextBox Grid.Column="2" VerticalAlignment="Center">
          <TextBox.Text>
            <Binding Path="AppTitle"/>
          </TextBox.Text>
        </TextBox>
      </Grid>
      <Label>Server Url</Label>
      <ComboBox IsEditable="True">
        <ComboBox.ItemTemplate>
          <DataTemplate>
            <StackPanel Orientation="Horizontal">
              <Button>
                <Button.Command>
                  <Binding Path="Data.RemoveUrlCommand" Source="{StaticResource Proxy}"/>
                </Button.Command>
                <Button.CommandParameter>
                  <Binding/>
                </Button.CommandParameter>Remove
              </Button>
              <TextBlock Margin="10,0,0,0" VerticalAlignment="Center">
                <TextBlock.Text>
                  <Binding/>
                </TextBlock.Text>
              </TextBlock>
            </StackPanel>
          </DataTemplate>
        </ComboBox.ItemTemplate>
        <ComboBox.ItemsSource>
          <Binding Path="ServerUrls"/>
        </ComboBox.ItemsSource>
        <ComboBox.SelectedValue>
          <Binding Path="App.ServerUrl"/>
        </ComboBox.SelectedValue>
        <ComboBox.Text>
          <Binding Path="UpdateServerUrl" UpdateSourceTrigger="LostFocus" Mode="OneWayToSource" ValidatesOnExceptions="True"/>
        </ComboBox.Text>
      </ComboBox>
      <Label>Actions</Label>
      <Button Margin="0 0 0 5">
        <Button.Command>
          <Binding Path="NewLogCommand"/>
        </Button.Command>Create Logs
      </Button>
      <Button Margin="0 0 0 5">
        <Button.Command>
          <Binding Path="NewKeepAliveCommand"/>
        </Button.Command>Create KeepAlive
      </Button>
      <Button Margin="0 0 0 5">
        <Button.Command>
          <Binding Path="NewMetricsCommand"/>
        </Button.Command>Create Metrics
      </Button>
      <Separator Margin="10"/>
      <Label>Authorization token</Label>
      <ComboBox IsEditable="True">
        <ComboBox.ItemTemplate>
          <DataTemplate>
            <StackPanel Orientation="Horizontal">
              <Button>
                <Button.Command>
                  <Binding Path="Data.RemoveAuthTokenCommand" Source="{StaticResource Proxy}"/>
                </Button.Command>
                <Button.CommandParameter>
                  <Binding/>
                </Button.CommandParameter>Remove
              </Button>
              <TextBlock Margin="10,0,0,0" VerticalAlignment="Center">
                <TextBlock.Text>
                  <Binding/>
                </TextBlock.Text>
              </TextBlock>
            </StackPanel>
          </DataTemplate>
        </ComboBox.ItemTemplate>
        <ComboBox.ItemsSource>
          <Binding Path="AuthTokens"/>
        </ComboBox.ItemsSource>
        <ComboBox.SelectedValue>
          <Binding Path="App.AuthToken"/>
        </ComboBox.SelectedValue>
        <ComboBox.Text>
          <Binding Path="UpdateAuthToken" UpdateSourceTrigger="LostFocus" Mode="OneWayToSource" ValidatesOnExceptions="True"/>
        </ComboBox.Text>
      </ComboBox>
      <Label>Management</Label>
      <Button Margin="0 0 0 5">
        <Button.Command>
          <Binding Path="RemoveEntitiesCommand"/>
        </Button.Command>Remove entities
      </Button>
      <Button Margin="0 0 0 5">
        <Button.Command>
          <Binding Path="ManageGroupsCommand"/>
        </Button.Command>Manage groups
      </Button>
    </StackPanel>
    <Grid Background="Gray" Opacity="0.75">
      <Grid.Visibility>
        <Binding Path="IsBusy" Converter="{x:Static ns3:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;2&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;ternary&gt;&lt;parameter name=&quot;isBusy&quot; type=&quot;System.Boolean&quot; /&gt;&lt;prim val=&quot;System.Windows.Visibility.Visible&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;prim val=&quot;System.Windows.Visibility.Collapsed&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/ternary&gt;&lt;parameter name=&quot;isBusy&quot; type=&quot;System.Boolean&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
      </Grid.Visibility>
      <ns2:ImageAwesome Icon="Cog" Spin="True" Height="48" Width="48" SpinDuration="4"/>
    </Grid>
  </Grid>
</UserControl>
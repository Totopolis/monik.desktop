using MonikDesktop.Common.Extensions;
using MonikDesktop.Views;

ViewUserControl "MonikDesktop.Views.SourcesView" {
  Resources: CollectionViewSource Key="CustomerView" {
    Source: "{Binding Path=Items}"
    GroupDescriptions: PropertyGroupDescription { PropertyName: "GroupName" }
  }
  Grid {
    #TwoRows(40)
    @StackPanelHorizontal() {
      Grid.Row: 0
      Button {
        Command: bind SelectNoneCommand
        Margin: 5
        "Select None"
      }
      Button {
        Command: bind SelectGroupCommand
        Margin: 5
        "Select Group"
      }
      TextBox {
        Text: bind FilterText
              set [
                Mode: TwoWay
                UpdateSourceTrigger: PropertyChanged
              ]
        Margin: 5
        Width: 210
      }
    }
    DataGrid {
      VirtualizingPanel.VirtualizationMode: "Recycling"
      VirtualizingPanel.IsVirtualizingWhenGrouping: true
      VirtualizingPanel.IsVirtualizing: true
      VirtualizingPanel.IsContainerVirtualizable: true
      VirtualizingPanel.ScrollUnit: Item
      ScrollViewer.CanContentScroll: true
      EnableRowVirtualization: true
      SelectionMode: Single
      SelectedItem: bind SelectedItem
      ItemsSource: bind from $resource CustomerView
      CanUserAddRows: false
      CanUserDeleteRows: false
      AutoGenerateColumns: false
      GridLinesVisibility: Horizontal
      HorizontalGridLinesBrush: resource dyn "SeperatorBrush"
      Grid.Row: 1
      DataGridExtensions.LastColumnFill: true
      Columns: [
        DataGridTemplateColumn {
          Header: "Checked"
          SortMemberPath: "Checked"
          CellTemplate: DataTemplate
          {
            CheckBox {
            HorizontalAlignment: Center
            VerticalAlignment: Center
              IsChecked: bind Checked
                   set [
                     Mode: TwoWay
                     UpdateSourceTrigger: PropertyChanged
                   ]
            }
          }
        }
        DataGridTextColumn {
          Header: "Source"
          IsReadOnly: true
          Binding: bind SourceName
        }
        DataGridTextColumn {
          Header: "Instance"
          IsReadOnly: true
          Binding: bind InstanceName
        }
      ]
      GroupStyle: GroupStyle {
        ContainerStyle: Style {
          TargetType: GroupItem
          Setter { Property: "Margin",  Value: "0,0,0,5" }
          Setter {
            Property: "Template"
            Value: ControlTemplate {
              TargetType: GroupItem
              Expander {
                IsExpanded: true
                Background: resource dyn "AccentColorBrush"
                BorderBrush: resource dyn "AccentColorBrush3"
                Foreground: resource dyn "BlackBrush"
                BorderThickness: "1,1,1,5"
                Header: DockPanel {
                  TextBlock {
                    FontWeight: "Bold"
                    Text: bind Name
                    Margin: "5,0,0,0"
                    Width: "100"
                  }
                  TextBlock { FontWeight: "Bold",  Text: bind ItemCount }
                }
                Content: ItemsPresenter { }
              }
            }
          }
        }
      }
    }
  }
}
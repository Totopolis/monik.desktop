mixin RemoveButtonStyle() for Style
{
  TargetType: Button
  #Setter("Visibility", "Hidden")
  Setter 
  {
    Property: "Template"
    Value: ControlTemplate
    {
      TargetType: Button
      Border "button"
      {
        Padding: "5,0,5,1"
        CornerRadius: 5
        Background: Red
        BorderBrush: "Black"
        BorderThickness: 1
        TextBlock 
        {
          Foreground: White
          FontWeight: "Bold"
          Text: "{TemplateBinding Button.Content}"
          HorizontalAlignment: Center
          VerticalAlignment: Center
        }
      }
      Triggers:
      [
        Trigger
        {
          Property: "IsMouseOver"
          Value: true
          #Setter("Background", Brown, "button")
        }
        Trigger
        {
          Property: "IsPressed"
          Value: true
          #Setter("Background", DarkRed, "button")
        }
      ]
    }
  }
}

alias RemoveButton(bindingCommand, bindingCommandParameter) 
{
  Button
  {
    "X"
    Command: $bindingCommand
    CommandParameter: $bindingCommandParameter
  }
}

alias SimpleDataGrid()
{
  DataGrid 
  {
    IsReadOnly: true
    CanUserAddRows: false
    CanUserDeleteRows: false
    AutoGenerateColumns: false
    RowHeight: 40
    HorizontalGridLinesBrush: Silver
    VerticalGridLinesBrush: Silver
    GridLinesVisibility: Horizontal
  }
}
<ns0:ViewUserControl x:Class="MonikDesktop.Views.MetricsView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ns0="clr-namespace:MonikDesktop.Views" xmlns:ns1="clr-namespace:System;assembly=mscorlib" xmlns:ns2="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
                     xmlns:ammySidekick="clr-namespace:AmmySidekick">
  <ns0:ViewUserControl.Resources>
    <ns0:BindingProxy x:Key="Proxy">
      <ns0:BindingProxy.Data>
        <Binding/>
      </ns0:BindingProxy.Data>
    </ns0:BindingProxy>
  </ns0:ViewUserControl.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto"/>
      <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>
    <DataGrid IsReadOnly="True" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" RowHeight="20" HorizontalGridLinesBrush="{DynamicResource SeperatorBrush}" VerticalGridLinesBrush="{DynamicResource SeperatorBrush}" GridLinesVisibility="Horizontal" SelectionMode="Single" Grid.Column="0" x:Name="MainGrid">
      <DataGrid.SelectedItem>
        <Binding Path="SelectedMetric"/>
      </DataGrid.SelectedItem>
      <DataGrid.ItemsSource>
        <Binding Path="MetricValuesList"/>
      </DataGrid.ItemsSource>
      <DataGrid.Columns>
        <DataGridTextColumn Header="Source" Width="Auto">
          <DataGridTextColumn.Binding>
            <Binding Path="Metric.Instance.Source.Name"/>
          </DataGridTextColumn.Binding>
        </DataGridTextColumn>
        <DataGridTextColumn Header="Instance" Width="Auto">
          <DataGridTextColumn.Binding>
            <Binding Path="Metric.Instance.Name"/>
          </DataGridTextColumn.Binding>
        </DataGridTextColumn>
        <DataGridTextColumn Header="Name" Width="Auto">
          <DataGridTextColumn.Binding>
            <Binding Path="Metric.Name"/>
          </DataGridTextColumn.Binding>
        </DataGridTextColumn>
        <DataGridTextColumn Header="Type" Width="Auto">
          <DataGridTextColumn.Binding>
            <Binding Path="Metric.Aggregation"/>
          </DataGridTextColumn.Binding>
        </DataGridTextColumn>
        <DataGridTextColumn Header="Value" Width="Auto">
          <DataGridTextColumn.Binding>
            <Binding Path="Value"/>
          </DataGridTextColumn.Binding>
          <DataGridTextColumn.Visibility>
            <Binding Path="Data.Model.MetricDiagramVisible" Source="{StaticResource Proxy}" Converter="{x:Static ammySidekick:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;3&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;ternary&gt;&lt;parameter name=&quot;val&quot; type=&quot;System.Boolean&quot; /&gt;&lt;prim val=&quot;System.Windows.Visibility.Collapsed&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;prim val=&quot;System.Windows.Visibility.Visible&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/ternary&gt;&lt;parameter name=&quot;val&quot; type=&quot;System.Boolean&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
          </DataGridTextColumn.Visibility>
          <DataGridTextColumn.ElementStyle>
            <Style TargetType="{x:Type TextBlock}">
              <Setter Property="HorizontalAlignment" Value="Right"/>
              <Setter Property="VerticalAlignment" Value="Center"/>
              <Setter Property="Visibility" Value="Collapsed"/>
              <Style.Triggers>
                <DataTrigger Value="True">
                  <Setter Property="Visibility" Value="Visible"/>
                  <DataTrigger.Binding>
                    <Binding Path="HasValue"/>
                  </DataTrigger.Binding>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </DataGridTextColumn.ElementStyle>
        </DataGridTextColumn>
      </DataGrid.Columns>
    </DataGrid>
    <ns2:CartesianChart Grid.Column="1" LegendLocation="None" DisableAnimations="True" Hoverable="False">
      <ns2:CartesianChart.DataTooltip>
        <ns0:MetricsChartTooltipView/>
      </ns2:CartesianChart.DataTooltip>
      <ns2:CartesianChart.Visibility>
        <Binding Path="Model.MetricDiagramVisible" Converter="{x:Static ammySidekick:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;1&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;ternary&gt;&lt;parameter name=&quot;val&quot; type=&quot;System.Boolean&quot; /&gt;&lt;prim val=&quot;System.Windows.Visibility.Visible&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;prim val=&quot;System.Windows.Visibility.Collapsed&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/ternary&gt;&lt;parameter name=&quot;val&quot; type=&quot;System.Boolean&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
      </ns2:CartesianChart.Visibility>
      <ns2:CartesianChart.Series>
        <ns2:ColumnSeries MaxColumnWidth="{x:Static ns1:Double.PositiveInfinity}" Fill="{DynamicResource AccentBaseColorBrush}">
          <ns2:ColumnSeries.ColumnPadding>
            <Binding Path="Model.MetricHistoryDepthHours" Converter="{x:Static ammySidekick:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;4&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;ternary&gt;&lt;binary op=&quot;Greater&quot;&gt;&lt;parameter name=&quot;v&quot; type=&quot;System.Int32&quot; /&gt;&lt;prim val=&quot;5&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Int32&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/binary&gt;&lt;prim val=&quot;0&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Int32&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;ternary&gt;&lt;binary op=&quot;Greater&quot;&gt;&lt;parameter name=&quot;v&quot; type=&quot;System.Int32&quot; /&gt;&lt;prim val=&quot;2&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Int32&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/binary&gt;&lt;prim val=&quot;1&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Int32&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;prim val=&quot;2&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Int32&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/ternary&gt;&lt;/ternary&gt;&lt;parameter name=&quot;v&quot; type=&quot;System.Int32&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
          </ns2:ColumnSeries.ColumnPadding>
          <ns2:ColumnSeries.Values>
            <Binding Path="SeriesCollection"/>
          </ns2:ColumnSeries.Values>
        </ns2:ColumnSeries>
      </ns2:CartesianChart.Series>
      <ns2:CartesianChart.AxisX>
        <ns2:Axis>
          <ns2:Axis.LabelFormatter>
            <Binding Path="DateTimeFormatter"/>
          </ns2:Axis.LabelFormatter>
        </ns2:Axis>
      </ns2:CartesianChart.AxisX>
    </ns2:CartesianChart>
  </Grid>
</ns0:ViewUserControl>
<ns0:ViewUserControl x:Class="MonikDesktop.Views.StartupView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ns0="clr-namespace:MonikDesktop.Views" xmlns:ns1="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" xmlns:ns2="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.Modern"
                     xmlns:ammySidekick="clr-namespace:AmmySidekick">
  <ns0:ViewUserControl.Resources>
    <ns0:BindingProxy x:Key="Proxy">
      <ns0:BindingProxy.Data>
        <Binding/>
      </ns0:BindingProxy.Data>
    </ns0:BindingProxy>
  </ns0:ViewUserControl.Resources>
  <Grid>
    <StackPanel Orientation="Vertical" Margin="3">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="120"/>
          <ColumnDefinition Width="80"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition/>
          <RowDefinition/>
        </Grid.RowDefinitions>
        <ns1:ToggleSwitch Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" HorizontalContentAlignment="Center" OnLabel="Dark" OffLabel="Light">
          <ns1:ToggleSwitch.IsChecked>
            <Binding Path="IsDark"/>
          </ns1:ToggleSwitch.IsChecked>
        </ns1:ToggleSwitch>
        <TextBlock Grid.Row="0" Grid.Column="1" Margin="20,0,0,0" VerticalAlignment="Center">Color</TextBlock>
        <ComboBox Grid.Row="0" Grid.Column="2" Margin="0,5,0,5">
          <ComboBox.ItemsSource>
            <Binding Path="Accents"/>
          </ComboBox.ItemsSource>
          <ComboBox.SelectedValue>
            <Binding Path="Accent"/>
          </ComboBox.SelectedValue>
        </ComboBox>
        <TextBlock Grid.Row="1" Grid.Column="1" Margin="20,0,0,0" VerticalAlignment="Center">Header</TextBlock>
        <TextBox Grid.Row="1" Grid.Column="2" Margin="0,5,0,5" VerticalAlignment="Center">
          <TextBox.Text>
            <Binding Path="AppTitle"/>
          </TextBox.Text>
        </TextBox>
      </Grid>
      <Separator Margin="10"/>
      <Label>Server Url</Label>
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Button Grid.Column="0" Margin="5,0,5,0" Width="26" Height="26" ToolTip="Reload cache" Style="{DynamicResource MahApps.Styles.Button.Circle}">
          <Button.Command>
            <Binding Path="RefreshCommand"/>
          </Button.Command>
          <ns2:PackIconModern Kind="Refresh" Height="12" Width="12"/>
        </Button>
        <ComboBox IsEditable="True" Grid.Column="1">
          <ComboBox.ItemTemplate>
            <DataTemplate>
              <StackPanel Orientation="Horizontal">
                <Button>
                  <Button.Command>
                    <Binding Path="Data.RemoveUrlCommand" Source="{StaticResource Proxy}"/>
                  </Button.Command>
                  <Button.CommandParameter>
                    <Binding/>
                  </Button.CommandParameter>Remove
                </Button>
                <TextBlock Margin="10,0,0,0" VerticalAlignment="Center">
                  <TextBlock.Text>
                    <Binding/>
                  </TextBlock.Text>
                </TextBlock>
              </StackPanel>
            </DataTemplate>
          </ComboBox.ItemTemplate>
          <ComboBox.ItemsSource>
            <Binding Path="ServerUrls"/>
          </ComboBox.ItemsSource>
          <ComboBox.SelectedValue>
            <Binding Path="ServerUrl"/>
          </ComboBox.SelectedValue>
          <ComboBox.Text>
            <Binding Path="UpdateServerUrl" UpdateSourceTrigger="LostFocus" ValidatesOnExceptions="True"/>
          </ComboBox.Text>
        </ComboBox>
      </Grid>
      <Label>Actions</Label>
      <Button Margin="0 0 0 5">
        <Button.Command>
          <Binding Path="NewLogCommand"/>
        </Button.Command>Create Logs
      </Button>
      <Button Margin="0 0 0 5">
        <Button.Command>
          <Binding Path="NewKeepAliveCommand"/>
        </Button.Command>Create KeepAlive
      </Button>
      <Button Margin="0 0 0 5">
        <Button.Command>
          <Binding Path="NewMetricsCommand"/>
        </Button.Command>Create Metrics
      </Button>
      <Separator Margin="10"/>
      <Label>Authorization token</Label>
      <ComboBox IsEditable="True">
        <ComboBox.ItemTemplate>
          <DataTemplate>
            <StackPanel Orientation="Horizontal">
              <Button>
                <Button.Command>
                  <Binding Path="Data.RemoveAuthTokenCommand" Source="{StaticResource Proxy}"/>
                </Button.Command>
                <Button.CommandParameter>
                  <Binding/>
                </Button.CommandParameter>Remove
              </Button>
              <TextBlock Margin="10,0,0,0" VerticalAlignment="Center">
                <TextBlock.Text>
                  <Binding/>
                </TextBlock.Text>
              </TextBlock>
            </StackPanel>
          </DataTemplate>
        </ComboBox.ItemTemplate>
        <ComboBox.ItemsSource>
          <Binding Path="AuthTokens"/>
        </ComboBox.ItemsSource>
        <ComboBox.SelectedValue>
          <Binding Path="AuthToken"/>
        </ComboBox.SelectedValue>
        <ComboBox.Text>
          <Binding Path="UpdateAuthToken" UpdateSourceTrigger="LostFocus" ValidatesOnExceptions="True"/>
        </ComboBox.Text>
      </ComboBox>
      <TextBlock Margin="3" Foreground="{DynamicResource GrayBrush4}">
        <TextBlock.Visibility>
          <Binding Path="AuthTokenDescription" Converter="{x:Static ammySidekick:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;5&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;ternary&gt;&lt;staticcall method=&quot;IsNullOrEmpty&quot;&gt;&lt;typeinfo typename=&quot;System.String&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;parameter name=&quot;val&quot; type=&quot;System.String&quot; /&gt;&lt;/staticcall&gt;&lt;prim val=&quot;System.Windows.Visibility.Collapsed&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;prim val=&quot;System.Windows.Visibility.Visible&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/ternary&gt;&lt;parameter name=&quot;val&quot; type=&quot;System.String&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
        </TextBlock.Visibility>
        <TextBlock.Text>
          <Binding Path="AuthTokenDescription"/>
        </TextBlock.Text>
      </TextBlock>
      <Label>Management</Label>
      <Button Margin="0 0 0 5">
        <Button.Command>
          <Binding Path="RemoveEntitiesCommand"/>
        </Button.Command>Remove entities
      </Button>
      <Button Margin="0 0 0 5">
        <Button.Command>
          <Binding Path="ManageGroupsCommand"/>
        </Button.Command>Manage groups
      </Button>
    </StackPanel>
    <Grid Background="{DynamicResource WhiteBrush}" Opacity="0.75">
      <Grid.Visibility>
        <Binding Path="IsBusy" Converter="{x:Static ammySidekick:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;6&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;ternary&gt;&lt;parameter name=&quot;isBusy&quot; type=&quot;System.Boolean&quot; /&gt;&lt;prim val=&quot;System.Windows.Visibility.Visible&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;prim val=&quot;System.Windows.Visibility.Collapsed&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/ternary&gt;&lt;parameter name=&quot;isBusy&quot; type=&quot;System.Boolean&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
      </Grid.Visibility>
      <ns2:PackIconModern Kind="Refresh" Spin="True" Height="48" Width="48" SpinDuration="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
    </Grid>
  </Grid>
</ns0:ViewUserControl>
using Xceed.Wpf.AvalonDock;
using Xceed.Wpf.AvalonDock.Controls;
using Xceed.Wpf.AvalonDock.Converters;
using MahApps.Metro.IconPacks;

ResourceDictionary {
  
  ActivateCommandLayoutItemFromLayoutModelConverter Key="ActivateCommandLayoutItemFromLayoutModelConverter" { }
  
   Style Key="AvalonDock_ThemeMetro_ToolButtonStyle" {
    TargetType: "ToggleButton"
    Setter { Property: "Background",  Value: "Transparent" }
    Setter { Property: "BorderThickness",  Value: "1" }
    Setter { Property: "BorderBrush",  Value: "Transparent" }
    Setter { Property: "Padding",  Value: "0" }
    Setter {
      Property: "Template"
      Value: ControlTemplate {
        TargetType: "ToggleButton"
        Border {
          BorderBrush: "{TemplateBinding BorderBrush}"
          Background: "{TemplateBinding Background}"
          BorderThickness: "{TemplateBinding BorderThickness}"
          ContentPresenter { }
        }
      }
    }
  }

  Style Key="AvalonDock_MahApps_DocumentPaneControlStyle" {
    TargetType: LayoutDocumentPaneControl
    #Setter("Background", resource dyn "WhiteBrush")
    #Setter("BorderBrush", null)
    Setter {
      Property: "Template"
      Value: ControlTemplate {
        TargetType: LayoutDocumentPaneControl
        Grid {
          ClipToBounds: "true"
          SnapsToDevicePixels: "true"
          KeyboardNavigation.TabNavigation: "Local"
          RowDefinitions: [
            RowDefinition { Height: "Auto" }
            RowDefinition { Height: "*" }
          ]
          Border { Background: "Transparent",  Grid.RowSpan: "2" }
          Grid {
            Visibility: bind Model.ShowHeader from $ancestor<LayoutDocumentPaneControl> convert (bool val) => val ? Visibility.Visible : Visibility.Collapsed
            Panel.ZIndex: "1"
            ColumnDefinitions: [
              ColumnDefinition { }
              ColumnDefinition { Width: "Auto" }
            ]
            DocumentPaneTabPanel "HeaderPanel" {
              Grid.Column: "0"
              IsItemsHost: "true"
              Margin: "2,0,2,0"
              Grid.Row: "0"
              KeyboardNavigation.TabIndex: "1"
            }
            DropDownButton "MenuDropDownButton" {
              Style: "{StaticResource AvalonDock_ThemeMetro_ToolButtonStyle}"
              Focusable: "False"
              VerticalAlignment: "Center"
              Grid.Column: "1"
              DropDownContextMenu: ContextMenuEx {
                ItemsSource: "{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerStyle: Style {
                  TargetType: MenuItemEx
                  BasedOn: "{StaticResource {x:Type MenuItem}}"
                  Setter { Property: "HeaderTemplate",  Value: "{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}" }
                  Setter { Property: "HeaderTemplateSelector",  Value: "{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}" }
                  Setter { Property: "IconTemplate",  Value: "{Binding Path=Root.Manager.IconContentTemplate}" }
                  Setter { Property: "IconTemplateSelector",  Value: "{Binding Path=Root.Manager.IconContentTemplateSelector}" }
                  Setter { Property: "Command",  Value: "{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}" }
                }
              }
              Opacity: 0.75
              Margin: 5
              PackIconModern 
              {
                Kind: "ChevronDown"
                Height: 12
                Width: 12
              }
            }
          }
          Border "ContentPanel" {
            VerticalAlignment: "Stretch"
            HorizontalAlignment: "Stretch"
            BorderBrush: "{TemplateBinding BorderBrush}"
            BorderThickness: "{TemplateBinding BorderThickness}"
            Background: "{TemplateBinding Background}"
            Grid.Column: "0"
            KeyboardNavigation.DirectionalNavigation: "Contained"
            Grid.Row: "1"
            KeyboardNavigation.TabIndex: "2"
            KeyboardNavigation.TabNavigation: "Cycle"
            Padding: "0,1,0,2"
            ContentPresenter "PART_SelectedContentHost" {
              ContentSource: "SelectedContent"
              Margin: "0,2,0,2"
              SnapsToDevicePixels: "{TemplateBinding SnapsToDevicePixels}"
            }
          }
        }
        Triggers: [
          Trigger {
            Property: "IsMouseOver"
            SourceName: "MenuDropDownButton"
            Value: true
            #Setter("Opacity", 1, "MenuDropDownButton")
          }
          Trigger {
            Property: "IsChecked"
            SourceName: "MenuDropDownButton"
            Value: true
            #Setter("Opacity", 1, "MenuDropDownButton")
            Setter {
              Property: "Content"
              TargetName: "MenuDropDownButton"
              Value: PackIconModern {
                Kind: "ChevronUp"
                Height: 12
                Width: 12
              }
            }
          }
          Trigger {
            Property: "IsEnabled"
            Value: "false"
            Setter { Property: "Foreground",  Value: resource dyn "ControlsDisabledBrush" }
          }
          DataTrigger {
            Binding: "{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}"
            Value: "0"
            Setter {
              Property: "Visibility"
              Value: "Collapsed"
              TargetName: "MenuDropDownButton"
            }
          }
        ]
      }
    }
    Setter {
      Property: "ItemContainerStyle"
      Value: Style {
        TargetType: TabItem
        Setter { Property: "IsSelected",  Value: "{Binding IsSelected, Mode=TwoWay}" }
        Setter { Property: "Background",  Value: "Transparent" }
        Setter { Property: "BorderBrush",  Value: "Transparent" }
        Setter { Property: "Foreground",  Value: resource dyn "BlackBrush" }
        Setter { Property: "IsSelected",  Value: bind IsSelected set [ Mode: TwoWay ] }
        Setter { Property: "IsEnabled",  Value: bind IsEnabled }
        Setter { Property: "ToolTip",  Value: bind ToolTip }

        Setter { Property: "Padding",  Value: "4" }
        Setter { Property: "Margin",  Value: "2,0,2,0" }
        Setter {
          Property: "Template"
          Value: ControlTemplate {
            TargetType: TabItem
            Grid {
              SnapsToDevicePixels: "true"
              Margin: "0,4,4,4"
              Border "Bd" {
                BorderBrush: "{TemplateBinding BorderBrush}"
                BorderThickness: "0,3,0,0"
                Background: "{TemplateBinding Background}"
                Padding: "{TemplateBinding Padding}"
              }
              ContentPresenter "Content" {
                Margin: "2"
                ContentSource: "Header"
                HorizontalAlignment: "{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                VerticalAlignment: "{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                RecognizesAccessKey: "True"
                SnapsToDevicePixels: "{TemplateBinding SnapsToDevicePixels}"
              }
            }
            Triggers: [
              Trigger {
                Property: "Selector.IsSelected"
                Value: true
                Setter { Property: "BorderBrush",  Value: resource dyn "AccentColorBrush" }
                Setter { Property: "Panel.ZIndex",  Value: "1" }
              }
              DataTrigger {
                Binding: bind IsActive
                Value: true
                Setter { Property: "BorderBrush",  Value: resource dyn "AccentBaseColorBrush" }
                Setter { Property: "Panel.ZIndex",  Value: "1" }
              }
              MultiTrigger {
                Conditions: [
                  Condition { Property: "IsMouseOver",  Value: "true" }
                  Condition { Property: "Selector.IsSelected",  Value: "false" }
                ]
                Setter { Property: "BorderBrush",  Value: resource dyn "HighlightBrush" }
                Setter { Property: "Panel.ZIndex",  Value: "0" }
              }
              Trigger {
                Property: "IsEnabled"
                Value: "false"
                Setter { Property: "Foreground",  Value: resource dyn "MenuItemDisabledBrush" }
              }
            ]
          }
        }
      }
    }
    Setter {
      Property: "ItemTemplate"
      Value: DataTemplate {
        LayoutDocumentTabItem { Model: "{Binding}" }
      }
    }
    Setter {
      Property: "ContentTemplate"
      Value: DataTemplate {
        LayoutDocumentControl { Model: "{Binding}" }
      }
    }
  }
  
  Style Key="AvalonDock_MahApps_AnchorablePaneControlStyle" {
    TargetType: LayoutAnchorablePaneControl
    Setter { Property: "TabStripPlacement",  Value: "Bottom" }
    Setter { Property: "Padding",  Value: "0" }
    Setter { Property: "BorderThickness",  Value: "0" }
    Setter { Property: "Foreground",  Value: "{Binding Model.Root.Manager.Foreground, RelativeSource={RelativeSource Self}}" }
    Setter { Property: "Background",  Value: "{Binding Model.Root.Manager.Background, RelativeSource={RelativeSource Self}}" }
    Setter {
      Property: "Template"
      Value: ControlTemplate {
        TargetType: LayoutAnchorablePaneControl
        Grid {
          ClipToBounds: "true"
          SnapsToDevicePixels: "true"
          KeyboardNavigation.TabNavigation: "Local"
          RowDefinitions: [
            RowDefinition { Height: "*" }
            RowDefinition { Height: "Auto" }
          ]
          Border { Background: "Transparent",  Grid.RowSpan: "2" }
          Border "ContentPanel" {
            BorderBrush: "{TemplateBinding BorderBrush}"
            BorderThickness: "{TemplateBinding BorderThickness}"
            Background: "{TemplateBinding Background}"
            Grid.Column: "0"
            KeyboardNavigation.DirectionalNavigation: "Contained"
            Grid.Row: "0"
            KeyboardNavigation.TabIndex: "2"
            KeyboardNavigation.TabNavigation: "Cycle"
            ContentPresenter "PART_SelectedContentHost" {
              ContentSource: "SelectedContent"
              Margin: "{TemplateBinding Padding}"
              SnapsToDevicePixels: "{TemplateBinding SnapsToDevicePixels}"
            }
          }
          AnchorablePaneTabPanel "HeaderPanel" {
            Margin: "0,0,2,2"
            IsItemsHost: "true"
            Grid.Row: "1"
            KeyboardNavigation.TabIndex: "1"
            Panel.ZIndex: "1"
          }
        }
        Triggers: [
          Trigger {
            Property: "IsEnabled"
            Value: "false"
            Setter { Property: "Foreground",  Value: resource dyn "BlackBrush" }
          }
          DataTrigger {
            Binding: "{Binding Items.Count, RelativeSource={RelativeSource Self}}"
            Value: "1"
            Setter {
              Property: "Margin"
              Value: "0"
              TargetName: "HeaderPanel"
            }
          }
        ]
      }
    }
    Setter {
      Property: "ItemContainerStyle"
      Value: Style {
        TargetType: TabItem
        Setter { Property: "Background",  Value: "Transparent" }
        Setter { Property: "BorderBrush",  Value: "Transparent" }
        Setter { Property: "Foreground",  Value: resource dyn "BlackBrush" }
        Setter { Property: "IsSelected",  Value: bind IsSelected set [ Mode: TwoWay ] }
        Setter { Property: "IsEnabled",  Value: bind IsEnabled }
        Setter { Property: "ToolTip",  Value: bind ToolTip }
        Setter {
          Property: "Template"
          Value: ControlTemplate {
            TargetType: TabItem
            Grid {
              SnapsToDevicePixels: "true"
              Border "Bd" {
                BorderBrush: "{TemplateBinding BorderBrush}"
                Margin: "4"
                BorderThickness: "0,2,0,0"
                Background: "{TemplateBinding Background}"
                Padding: "{TemplateBinding Padding}"
                ContentPresenter "Content" {
                  ContentSource: "Header"
                  HorizontalAlignment: "{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                  VerticalAlignment: "{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                  RecognizesAccessKey: "True"
                  SnapsToDevicePixels: "{TemplateBinding SnapsToDevicePixels}"
                }
              }
            }
            Triggers: [
              Trigger {
                Property: "Selector.IsSelected"
                Value: true
                Setter { Property: "BorderBrush",  Value: resource dyn "AccentColorBrush" }
                Setter { Property: "Panel.ZIndex",  Value: "1" }
              }
              DataTrigger {
                Binding: bind IsActive
                Value: true
                Setter { Property: "BorderBrush",  Value: resource dyn "AccentBaseColorBrush" }
                Setter { Property: "Panel.ZIndex",  Value: "1" }
              }
              MultiTrigger {
                Conditions: [
                  Condition { Property: "IsMouseOver",  Value: "true" }
                  Condition { Property: "Selector.IsSelected",  Value: "false" }
                ]
                Setter { Property: "BorderBrush",  Value: resource dyn "HighlightBrush" }
                Setter { Property: "Panel.ZIndex",  Value: "0" }
              }
              Trigger {
                Property: "IsEnabled"
                Value: "false"
                Setter { Property: "Foreground",  Value: resource dyn "MenuItemDisabledBrush" }
              }
            ]
          }
        }
        Triggers: DataTrigger {
          Binding: "{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}"
          Value: "1"
          Setter { Property: "Visibility",  Value: "Collapsed" }
        }
      }
    }
    Setter {
      Property: "ItemTemplate"
      Value: DataTemplate {
        LayoutAnchorableTabItem { Model: "{Binding}" }
      }
    }
    Setter {
      Property: "ContentTemplate"
      Value: DataTemplate {
        LayoutAnchorableControl { Model: "{Binding}" }
      }
    }
  }




  Style {
    TargetType: DockingManager
    #Setter("Control.Background", resource dyn "WhiteBrush")
    Setter {
      Property: DockingManager.DocumentPaneControlStyle
      Value: resource "AvalonDock_MahApps_DocumentPaneControlStyle"
    }
    Setter {
      Property: DockingManager.AnchorablePaneControlStyle
      Value: resource "AvalonDock_MahApps_AnchorablePaneControlStyle"
    }
  }
}

  